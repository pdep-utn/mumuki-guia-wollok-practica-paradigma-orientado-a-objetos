	test "Se puede agregar un producto por peso al carrito" {
		carrito.agregar(new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.3))
		assert.equals(1, carrito.cantidadDeProductos())
	}
	
	test "Si al carrito se le agrega un producto por peso y un producto que no es por peso, tiene en total 2 productos" {
		carrito.agregar(new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.3))
		carrito.agregar(new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75))
		assert.equals(2, carrito.cantidadDeProductos())
	}
	
	test "Si se agrega al carrito un producto por peso con la misma descripción que otro, aunque el peso sea distinto, la variedad del carrito es 1" {
		carrito.agregar(new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.3))
		carrito.agregar(new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.5))
		assert.equals(1, carrito.variedad())
	}
	
	test "Si se agrega al carrito un producto por peso con otra descripción que otro producto por peso, la variedad del carrito es 2" {
		carrito.agregar(new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.3))
		carrito.agregar(new ProductoPorPeso(descripcion = "Papa", precioPorKilo = 40, peso = 1.5))
		assert.equals(2, carrito.variedad())
	}
	
	test "El valor a abonar de un producto por peso es el peso del producto multiplicado por el precio por peso del mismo" {
		assert.equals(96, new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.3).valorAAbonar())
	}
	
	test "El total a abonar cuando el carrito tiene productos normales y por peso es la suma de los precios de los productos agregados" {
	  const quesoCremoso = new ProductoPorPeso(descripcion = "Queso cremoso", precioPorKilo = 320, peso = 0.5)
		carrito.agregar(quesoCremoso)
		carrito.agregar(new Producto(descripcion = "Chocolate", precioUnitario = 20))
		assert.equals(quesoCremoso.valorAAbonar() + 20, carrito.totalAAbonar())
	}
	
// Test del ejercicio anterior
	test "Debería poder agregarse un producto al carrito" {
		carrito.agregar(new Producto(descripcion = "Chocolate", precioUnitario = 20))
		assert.equals(1, carrito.cantidadDeProductos())
	}
	test "El carrito está vacío cuando no se le agregaron productos"{
		assert.that(carrito.estaVacio())
	}
	test "El carrito no está vacío cuando se le agregaron productos"{
		carrito.agregar(new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75))
		assert.notThat(carrito.estaVacio())
	}
	test "La cantidad total de productos cuando el carrito está vacío es 0"{
		assert.equals(0, carrito.cantidadDeProductos())
	}
	test "La variedad del carrito cuando está vacío es 0"{
		assert.equals(0, carrito.variedad())
	}
	test "Si al carrito se le agregan 3 productos diferentes, la cantidad total de productos es 3"{
		carrito.agregar(new Producto(descripcion = "Chocolate", precioUnitario = 20))
		carrito.agregar(new Producto(descripcion = "Leche", precioUnitario = 30))
		carrito.agregar(new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75))
		assert.equals(3, carrito.cantidadDeProductos())
	}
	
	test "Si se agrega dos veces un mismo producto al carrito, la cantidad total de productos es 2" {
	  const aceiteDeGirasol = new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75)
		carrito.agregar(aceiteDeGirasol)
		carrito.agregar(aceiteDeGirasol)
		assert.equals(2, carrito.cantidadDeProductos())
	}
	
	test "La variedad del carrito al cual se le agregó varias veces un único producto es 1" {
	  const aceiteDeGirasol = new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75)
		carrito.agregar(aceiteDeGirasol)
		carrito.agregar(aceiteDeGirasol)
		assert.equals(1, carrito.variedad())
	}
	
	test "La variedad del carrito al cual sólo se le agregaron productos con descripciones distintas equivale a la cantidad de productos"{
		carrito.agregar(new Producto(descripcion = "Chocolate", precioUnitario = 20))
		carrito.agregar(new Producto(descripcion = "Leche", precioUnitario = 30))
		carrito.agregar(new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75))
		assert.equals(carrito.cantidadDeProductos(), carrito.variedad())
	}
	
	test "El total a abonar cuando el carrito está vacío es 0" {
		assert.equals(0, carrito.totalAAbonar())
	}
	test "El total a abonar cuando el carrito tiene varios productos es la suma de los precios de los productos que se agregaron" {
		carrito.agregar(new Producto(descripcion = "Chocolate", precioUnitario = 20))
		carrito.agregar(new Producto(descripcion = "Leche", precioUnitario = 30))
		assert.equals(50, carrito.totalAAbonar())
	}
	test "El total a abonar cuando al carrito sólo se le agregó un mismo producto 2 veces, es el doble del precio de ese producto" {
	  const aceiteDeGirasol = new Producto(descripcion = "Aceite de girasol", precioUnitario = 60.75)
		carrito.agregar(aceiteDeGirasol)
		carrito.agregar(aceiteDeGirasol)
		assert.equals(60.75 * 2, carrito.totalAAbonar())
	}