describe "Punto 1" {
	const contactoCreador = new Usuario()
	const desconocido = new Usuario()
	
	const fechaPosteriorPublicacion = publicacionPrivada.fechaPublicacion().plusDays(10)
	const creadorPublicacion = publicacionPrivada.creador()
	
	const creadorHistoria = historiaPublica.creador()
	const ultimoDiaVisibleParaHistoria = historiaPublica.fechaPublicacion().plusDays(1)
	
	fixture {
		creadorHistoria.agregarContacto(contactoCreador)
		creadorPublicacion.agregarContacto(contactoCreador)
	}
	
	test "Una publicacion pública la puede ver quien la publicó en cualquier fecha" {
		publicacionPrivada.volverPublica()
		assert.that(publicacionPrivada.puedeVerla(creadorPublicacion, fechaPosteriorPublicacion))
	}
	test "Una publicacion privada la puede ver quien la publicó en cualquier fecha" {
		assert.that(publicacionPrivada.puedeVerla(creadorPublicacion, fechaPosteriorPublicacion))
	}
	test "Una publicacion pública la puede ver un contacto de quien la publicó en cualquier fecha" {
		publicacionPrivada.volverPublica()
		assert.that(publicacionPrivada.puedeVerla(contactoCreador, fechaPosteriorPublicacion))
	}
	test "Una publicacion privada la puede ver un contacto de quien la publicó en cualquier fecha" {
		assert.that(publicacionPrivada.puedeVerla(contactoCreador, fechaPosteriorPublicacion))
	}
	test "Una publicacion pública la puede ver un desconocido de quien la publicó en cualquier fecha" {
		publicacionPrivada.volverPublica()
		assert.that(publicacionPrivada.puedeVerla(desconocido, fechaPosteriorPublicacion))
	}
	test "Una publicacion privada NO la puede ver un desconocido de quien la publicó" {
		assert.notThat(publicacionPrivada.puedeVerla(desconocido, fechaPosteriorPublicacion))
	}
	
	test "Una historia pública la puede ver quien la publicó en cualquier fecha" {
		assert.that(historiaPublica.puedeVerla(creadorHistoria, ultimoDiaVisibleParaHistoria.plusDays(10)))
	}
	
	test "Una historia privada la puede ver quien la publicó en cualquier fecha" {
		historiaPublica.volverPrivada()
		assert.that(historiaPublica.puedeVerla(creadorHistoria, ultimoDiaVisibleParaHistoria.plusDays(10)))
	}
	
	test "Una historia pública la puede ver un contacto de quien la publicó hasta un día después de su publicación" {
		assert.that(historiaPublica.puedeVerla(contactoCreador, ultimoDiaVisibleParaHistoria))
	}
	test "Una historia pública NO la puede ver un contacto de quien la publicó pasado más de un día después de su publicación" {
		assert.notThat(historiaPublica.puedeVerla(contactoCreador, ultimoDiaVisibleParaHistoria.plusDays(1)))
	}
	
	test "Una historia privada la puede ver un contacto de quien la publicó hasta un día después de su publicación" {
		historiaPublica.volverPrivada()
		assert.that(historiaPublica.puedeVerla(contactoCreador, ultimoDiaVisibleParaHistoria))
	}
	test "Una historia privada NO la puede ver un contacto de quien la publicó pasado más de un día después de su publicación" {
		historiaPublica.volverPrivada()
		assert.notThat(historiaPublica.puedeVerla(contactoCreador, ultimoDiaVisibleParaHistoria.plusDays(1)))
	}
	
	test "Una historia pública la puede ver un desconocido de quien la publicó hasta un día después de su publicación" {
		assert.that(historiaPublica.puedeVerla(desconocido, ultimoDiaVisibleParaHistoria))
	}
	test "Una historia pública NO la puede ver un desconocido de quien la publicó pasado más de un día después de su publicación" {
		assert.notThat(historiaPublica.puedeVerla(desconocido, ultimoDiaVisibleParaHistoria.plusDays(1)))
	}
	
	test "Una historia privada NO la puede ver un desconocido de quien la publicó, incluso si es reciente" {
		historiaPublica.volverPrivada()
		assert.notThat(historiaPublica.puedeVerla(desconocido, ultimoDiaVisibleParaHistoria))
	}
}

describe "Punto 2" {
	const contactoIncluido = new Usuario()
	const contactoExcluido = new Usuario()

	const fechaPosteriorPublicacion = publicacionPrivada.fechaPublicacion().plusDays(10)
	const creadorPublicacion = publicacionPrivada.creador()
	
	const creadorHistoria = historiaPublica.creador()
	const ultimoDiaVisibleParaHistoria = historiaPublica.fechaPublicacion().plusDays(1)
	
	const publicacionConListaBlanca = publicacionPrivada
	const historiaConListaBlanca = historiaPublica
	
	fixture {
		[publicacionConListaBlanca, historiaConListaBlanca].forEach {publicacion =>
			publicacion.creador().agregarContacto(contactoIncluido)
			publicacion.creador().agregarContacto(contactoExcluido)
			publicacion.conListaBlanca([contactoIncluido])
		}
	}
	
	test "Una publicación con lista blanca puede ser vista por un contacto incluído en dicha lista en cualquier fecha" {
		assert.that(publicacionConListaBlanca.puedeVerla(contactoIncluido, fechaPosteriorPublicacion))
	}
	test "Una historia con lista blanca puede ser vista por un contacto incluído en dicha lista hasta un día después de su publicación" {
		assert.that(historiaConListaBlanca.puedeVerla(contactoIncluido, ultimoDiaVisibleParaHistoria))
	}
	test "Una historia con lista blanca NO puede ser vista por un contacto incluído en dicha lista pasado más de un día después de su publicación" {
		assert.notThat(historiaConListaBlanca.puedeVerla(contactoIncluido, ultimoDiaVisibleParaHistoria.plusDays(1)))
	}
	test "Una publicación con lista blanca NO puede ser vista por un contacto excluído en dicha lista" {
		assert.notThat(publicacionConListaBlanca.puedeVerla(contactoExcluido, fechaPosteriorPublicacion))
	}
	test "Una historia con lista blanca NO puede ser vista por un contacto excluído en dicha lista" {
		assert.notThat(historiaConListaBlanca.puedeVerla(contactoExcluido, ultimoDiaVisibleParaHistoria))
	}
	test "Una publicación con lista blanca NO puede ser vista por alguien incluído en dicha lista que no es un contacto" {
		creadorPublicacion.eliminarContacto(contactoIncluido)
		assert.notThat(publicacionConListaBlanca.puedeVerla(contactoIncluido, fechaPosteriorPublicacion))
	}
	test "Una historia con lista blanca NO puede ser vista por alguien incluído en dicha lista que no es un contacto" {
		creadorHistoria.eliminarContacto(contactoIncluido)
		assert.notThat(historiaConListaBlanca.puedeVerla(contactoIncluido, ultimoDiaVisibleParaHistoria))
	}
	test "Una publicación con lista blanca puede ser vista por su creador" {
		assert.that(publicacionConListaBlanca.puedeVerla(creadorPublicacion, fechaPosteriorPublicacion))
	}
	test "Una historia con lista blanca puede ser vista por su creador en cualquier fecha" {
		assert.that(historiaConListaBlanca.puedeVerla(creadorHistoria, ultimoDiaVisibleParaHistoria.plusDays(7)))
	}
}